package ua.nure.dudka.practice5;

import java.io.FileNotFoundException;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Part4 {
    private static final String FILE_NAME = "part4.txt";
    private static int result = 0;

    static synchronized void setMax(int max) {
        if (max > result) {
            result = max;
        }
    }

    static int getStringMaxNumber(String input) {
        int max = 0;
        Scanner scanner = new Scanner(input);
        while (scanner.hasNextInt()) {
            int nextInt = scanner.nextInt();

            try {
                Thread.sleep(1);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }

            if (nextInt > max) {
                max = nextInt;
            }
        }

        scanner.close();
        return max;
    }

    public static void main(String[] args) {
        int maxInCycle = 0;
        long startTime;
        long endTime;

        List<FindMaxNumber> runnables = new ArrayList<>();
        Scanner scanner = null;
        try {
            scanner = new Scanner(new FileReader(FILE_NAME));
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }

        startTime = System.currentTimeMillis();
        if (scanner != null) {
            while (scanner.hasNextLine()) {
                String input = scanner.nextLine();
                FindMaxNumber runnable = new FindMaxNumber(input);
                runnables.add(runnable);
            }
        }

        for (FindMaxNumber runnable : runnables) {
            try {
                runnable.thread.join();
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
        System.out.println(Part4.result);
        endTime = System.currentTimeMillis();
        System.out.println(endTime - startTime);

        scanner = null;
        try {
            scanner = new Scanner(new FileReader(FILE_NAME));
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
        startTime = System.currentTimeMillis();
        if (scanner != null) {
            while (scanner.hasNextLine()) {
                String input = scanner.nextLine();
                int tempMax = getStringMaxNumber(input);
                if (tempMax > maxInCycle) {
                    maxInCycle = tempMax;
                }
            }
        }
        System.out.println(maxInCycle);
        endTime = System.currentTimeMillis();
        System.out.println(endTime - startTime);
    }
}
